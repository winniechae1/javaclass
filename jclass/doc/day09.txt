day09

Object 배열 
>> Object는 자바의 모든 클래스들의 최상위 클래스 
	즉, 자바에서 만드는 클래스들은 모두 Object 클래스를 이용해서 만들어진다.
	
	그런데 배열은 한가지 타입의 데이터만 모아서 관리한다. 
	즉, 문자열과 정수를 한꺼번에 관리하지는 못한다. 
	
	Object 클래스는 최상위 클래스이므로 
	모든 데이터의 변수로 사용할 수 있다. 
	따라서 Object로 배열을 만들게 되면 모든 데이터를 입력할 수 있다. 
	
	주의]
		Object 타입으로 기억된 데이터는 꺼낼 때 항상 원래타입으로 강제 형변환을 해줘서 연산해야한다.
		
------------------------------------------------------------------------------------------------------

2차원 배열 
>> 1차원 배열을 다시 배열로 관리하는 것

2차원 배열 만드는 법 
	
	1. 배열의 주소를 기억할 변수를 만든다. 
		>> Heap 영역에 있는 데이터는 주소를 알아야 사용할 수 있다. 
	
		방법]
			데이터타입 [][] 변수이름;
			즉, [] 를 하나만 쓰면 1차원 배열을 관리하는 것이고 
			[][] 이렇게 두개를 사용하면 2차원 배열을 관리하는 것이다. 
			
		예]
			int[][] stud;
	
	2. 1차원 배열을 몇개를 관리할지를 결정한다. 
		1차원 배열의 주소를 기억할 메모리를 만든다. 
		
		방법]
			new 데이터타입[개수][];
			>> 개수는 1차원 배열의 개수 
		
		예]
			stud = new int[5][];
			>> 주소를 기억해야만 사용할 수 있으므로 변수에 기억한다. 
	
	3. 실제 1차원 배열을 만들어 준다. 
		
		방법]
			new 데이터타입[개수];
			
		예]
			stud[0] = new int[3];
			>> 이것 역시 주소를 기억해야 사용할 수 있으므로 바깥배열의 각 방에 기억시킨다. 
			
	
		참고]
			Heap Type 
			>> 그 주소가 가리키는 곳에 있는 데이터의 형태를 지정하는 말 
			>> 같은 Heap 타입끼리만 사용이 가능하다. 
			>> 차원도 역시 같아야 한다. 
			
		예]
			int[] num = new int[2][2];  >> X : 차원이 다르다.
			
			int[] num = new int[5];
			>> Heap Type 은 num이라는 변수의 주소가 가리키는 곳의 데이터형태는 int 1차원배열입니다.

참고]
	자바 역시 C와 마찬가지로 사각형 형태의 배열도 만들 수 있다. 
	
	형식]
		데이터타입[][]  변수이름 = new 데이터타입[3][5];
		>> 3줄짜리 그리고 각 줄은 5칸짜리 사각형 모양의 배열이 만들어진다. 
		
	참고]
		사각형 모양이라 하더라도 내부적으로는 위에서 설명한 방식으로 메모리의 공간이 만들어진다. 

참고]
	2차원 배열도 초기화가 가능하다. 
	
	방법]
		1차원 배열의 초기화 
		int[] num = {1, 2, 3, 4, 5};
		
		2차원 배열의 초기화
		int[][] num = {	
						{1,2,3}, 
						{4,5,6}, 
						{7,8,9]
						};
		>> 2차원 배열의 초기화 
		
	참고]
		여기서도 마찬가지로 배열의 개수를 지정하지 못한다. 
		1차원 배열과 마찬가지로 초기화 데이터의 개수를 이용해서 
		자동으로 크기를 만들어준다.
	