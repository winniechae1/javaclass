#day08

String 배열 만들기 
	
	String[] str;
	str = new String[5];
	>> 이렇게 하면 데이터가 완성되지 않으므로 
	
	str[0] = "HONG";
	str[1] = "GIL";
	과 같이 데이터 공간까지 만들어야 한다.
	
	참고]
		
		String str1 = new String();
		라고 명령을 내리면 문자열을 기억할 공간을 Heap 영역에 만들게 되고 
		데이터는 아직 정해지지 않은 상태로 만들어진다.
		
		String str2 = "문자열";
		이라고 변수를 만들게 되면 
		이 변수는 스택에 만들어질 것이고 이 변수가 참조하는 주소는 
		리터럴 풀에 쌓인 "문자열" 데이터가 기억돼 메모리 주소를 참조하게 된다.
		
String 배열도 초기화가 가능하다. 
>> 배열을 만들면서 초기화 하는 방법으로 만들면 초기화가 된다. 

형식]
	String[] str1 = {"홍길동", "둘리", "고길동"};
	
	String[] str2 = new String[]{"홍길동", "둘리", "고길동"};

-----------------------------------------------------------------------------------

	String 은 필요에 따라서 char[] 형태로 변환해서 사용할 수 있다. 
	
		사용함수]
			
			toCharArray();
			
			예]
				string str = "Hong";
				char[] ch = str.toCharArray();
				ch[0] ==> 'H'
				ch[1] ==> 'o'
				ch[3] ==> 'g'
		
	String에서 자주 사용하는 함수들 ...
	
	1. charAt(위치)			: 해당 위치의 문자를 반환해주는 함수
	2. indexOf("문자열") 	: 해당 문자열의 시작위치값을 반환해주는 함수
	3. length()				: 문자열의 길이를 반환해주는 함수 
	4. subString()			: 문자열 중에서 원하는 문자열을 추출해서 반환해주는 함수
	
		형식1]
			subString(시작위치)
			>> 시작위치에서부터 끝까지 문자열을 추출해서 반환해주는 함수
			
		형식2]
			subString(시작위치, 종료위치)
			>> 시작위치에서부터 종료위치 이전 인덱스까지 문자열을 추출해서 반환해준다.
		
	5. equals(문자열)		: 두 문자열의 데이터를 비교하는 함수 
	